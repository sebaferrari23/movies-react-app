{"version":3,"sources":["actions/types.js","actions/moviesActions.js","components/Movie.js","components/PopularMovies.js","components/SearchMovies.js","components/MoviesContainer.js","components/MovieDetails.js","logo.svg","components/SearchBar.js","components/Navbar.js","components/Footer.js","components/App.js","reportWebVitals.js","reducers/moviesReducer.js","reducers/index.js","store.js","index.js"],"names":["SEARCH_MOVIES","FETCH_SEARCH_MOVIES","FETCH_POPULAR_MOVIES","FETCH_MOVIE","LOADING","APIKey","url","posterUrl","popularMoviesUrl","searchMoviesUrl","movieUrl","MovieCard","styled","article","Movie","title","poster","year","id","to","src","alt","className","Grid","div","connect","state","popularMovies","movies","dispatch","useDispatch","useEffect","a","axios","get","params","api_key","language","page","include_adult","data","modifiedData","map","movie","backPoster","popularity","substring","indexOf","overview","rating","type","payload","console","log","movieList","index","searchMovies","MovieContainerStyled","section","query","label","PopularMovies","Background","props","image","MovieDetailsContent","GenresList","ul","match","genresList","genres","genre","name","backdrop_path","poster_path","SearchBarStyled","fetchSearchMovies","value","onChange","e","target","placeholder","Header","header","Logo","NavLink","Navbar","exact","logo","FooterStyled","Footer","href","rel","App","path","component","MoviesContainer","MovieDetails","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","loading","action","combineReducers","moviesReducer","middleware","thunk","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a392d1dd.chunk.js","sourcesContent":["export const SEARCH_MOVIES = 'SEARCH_MOVIES';\r\nexport const FETCH_SEARCH_MOVIES = 'FETCH_SEARCH_MOVIES';\r\nexport const FETCH_POPULAR_MOVIES = 'FETCH_POPULAR_MOVIES';\r\nexport const FETCH_MOVIE = 'FETCH_MOVIE';\r\nexport const LOADING = 'LOADING';","import { FETCH_POPULAR_MOVIES, FETCH_SEARCH_MOVIES, SEARCH_MOVIES, FETCH_MOVIE, LOADING } from './types'\r\nimport axios from 'axios'\r\n\r\nconst APIKey = '5b94f6505413a44cf706f0b88c36656a';\r\nconst url = 'https://api.themoviedb.org/3';\r\nconst posterUrl = 'https://image.tmdb.org/t/p/';\r\nconst popularMoviesUrl = `${url}/discover/movie`;\r\nconst searchMoviesUrl = `${url}/search/movie`;\r\nconst movieUrl = `${url}/movie`;\r\n\r\nexport const fetchPopularMovies = () => async dispatch => {\r\n    try{\r\n        const {data} = await axios.get(popularMoviesUrl, {\r\n            params: {\r\n                api_key: APIKey,\r\n                language: 'en_US',\r\n                page: 1,\r\n                include_adult: false,\r\n                'vote_average.gte': 7,\r\n            }\r\n        })\r\n        const modifiedData = data['results'].map((movie) => ({\r\n            id: movie['id'],\r\n            backPoster: movie['backPoster'] ? posterUrl + 'w300/' + movie['backdrop_path'] : '',\r\n            popularity: movie['popularity'],\r\n            title: movie['title'],\r\n            year: movie['release_date'].substring(0, movie['release_date'].indexOf('-')),\r\n            poster: movie['poster_path'] ?  posterUrl + 'w300' + movie['poster_path'] : '',\r\n            overview: movie['overview'],\r\n            rating: movie['vote_average'],\r\n        }))\r\n        dispatch( {\r\n            type: FETCH_POPULAR_MOVIES,\r\n            payload: modifiedData\r\n        })\r\n    }\r\n    catch(e){\r\n        dispatch( {\r\n            type: FETCH_POPULAR_MOVIES,\r\n            payload: console.log(e),\r\n        })\r\n    }\r\n\r\n}\r\n\r\nexport const fetchSearchMovies = query => async dispatch => {\r\n    if(query) {\r\n        try{\r\n            const {data} = await axios.get(searchMoviesUrl, {\r\n                params: {\r\n                    api_key: APIKey,\r\n                    language: 'en_US',\r\n                    page: 1,\r\n                    include_adult: false,\r\n                    'vote_average.gte': 7,\r\n                    query: query\r\n                }\r\n            })\r\n\r\n            const modifiedData = data['results'] && data['results'].map((movie) => ({\r\n                id: movie['id'],\r\n                backPoster: movie['backPoster'] ? posterUrl + 'original' + movie['backdrop_path'] : '',\r\n                popularity: movie['popularity'],\r\n                title: movie['title'],\r\n                year: movie['release_date'] ? movie['release_date'].substring(0, movie['release_date'].indexOf('-')) : '',\r\n                poster: movie['poster_path'] ?  posterUrl + 'w300' + movie['poster_path'] : '',\r\n                overview: movie['overview'],\r\n                rating: movie['vote_average'],\r\n            }))\r\n\r\n            dispatch( {\r\n                type: FETCH_SEARCH_MOVIES,\r\n                payload: modifiedData\r\n            })\r\n        }\r\n        catch(e){\r\n            dispatch( {\r\n                type: FETCH_SEARCH_MOVIES,\r\n                payload: console.log(e),\r\n            })\r\n        }\r\n    }\r\n}\r\n\r\nexport const searchMovies = query => dispatch => {\r\n    dispatch({\r\n        type: SEARCH_MOVIES,\r\n        payload: query\r\n    });\r\n};\r\n\r\nexport const fetchMovie = id => async dispatch => {\r\n    try{\r\n        const {data} = await axios.get(`${movieUrl}/${id}`, {\r\n            params: {\r\n                api_key: APIKey,\r\n                language: 'en_US',\r\n            }\r\n        })\r\n        dispatch({\r\n            type: FETCH_MOVIE,\r\n            payload: data\r\n        })\r\n    }\r\n    catch(e){\r\n        dispatch( {\r\n            type: FETCH_MOVIE,\r\n            payload: console.log(e),\r\n        })\r\n    }\r\n};\r\n\r\nexport const loadingMovies = () => {\r\n    return {\r\n        type: LOADING\r\n    };\r\n};","import React from 'react'\r\nimport { Link } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\n\r\nconst MovieCard = styled.article`\r\n    & > a {\r\n        position: relative;\r\n        border-radius: 10px;\r\n        overflow: hidden;\r\n        display: flex;\r\n        align-items: center;\r\n        justify-content: center;\r\n        background-color: #151F2E;\r\n        box-shadow: 0 10px 30px rgba(0,0,0,.2);\r\n        &:before {\r\n            display: block;\r\n            content: '';\r\n            padding-bottom: 150%;\r\n        }\r\n        & > img {\r\n            position: absolute;\r\n            z-index: 1;\r\n            width: 100%;\r\n            height: 100%;\r\n            transition: all .4s ease-in-out .2s;\r\n            object-fit: cover;\r\n        }\r\n        & > img ~ .movie__content {\r\n            opacity: 0;\r\n            transition: all .4s ease-in-out;\r\n            transform: translateY(10px);\r\n        }\r\n        & > .movie__content {\r\n            position: absolute;\r\n            z-index: 10;\r\n            text-align: center;\r\n            color: #fff;\r\n            padding: 30px;\r\n            & > h3 {\r\n                font-size: 24px;\r\n                margin: 0 0 10px 0;\r\n            }\r\n            & > p {\r\n                margin: 0;\r\n                font-weight: 700;\r\n            }\r\n        }\r\n        &:hover {\r\n            & > img {\r\n                transform: scale(1.05);\r\n                filter: grayscale(80%) contrast(120%) blur(1px);\r\n                opacity: .5;\r\n                transition: all .4s ease-in-out;\r\n            }\r\n            & > .movie__content {\r\n                opacity: 1;\r\n                transition: all .4s ease-in-out .2s;\r\n                transform: translateY(0);\r\n            }\r\n        }\r\n    }\r\n`\r\n\r\nconst Movie = ({ title, poster, year, id }) => {\r\n    return (\r\n        <MovieCard>\r\n            <Link to={`movies-react-app/movie/${id}`}>\r\n                { poster ? <img src={poster} alt={title} /> : '' }\r\n                <div className=\"movie__content\">\r\n                    <h3>{title}</h3>\r\n                    <p>{year}</p>\r\n                </div>\r\n            </Link>\r\n        </MovieCard>\r\n    )\r\n}\r\n\r\nexport default Movie\r\n","import React, {useEffect} from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { useDispatch } from \"react-redux\"\r\nimport styled from 'styled-components'\r\nimport {\r\n  fetchPopularMovies,\r\n} from '../actions/moviesActions';\r\nimport Movie from './Movie'\r\n\r\nconst Grid = styled.div`\r\n    display: grid;\r\n    grid-template-columns: repeat(5, 1fr);\r\n    grid-gap: 40px;\r\n`\r\n\r\nconst MoviesContainer = ( {  popularMovies } ) => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        dispatch(fetchPopularMovies());\r\n    }, [dispatch]);\r\n\r\n    var movieList = popularMovies && popularMovies.map((movie, index) => {\r\n        return (\r\n            <Movie \r\n                key={index}\r\n                id={movie.id} \r\n                title={movie.title} \r\n                poster={movie.poster}\r\n                year={movie.year}\r\n            />\r\n        )\r\n    });\r\n\r\n    return (\r\n        <Grid>\r\n            { movieList }\r\n        </Grid>\r\n    )\r\n    \r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    popularMovies: state.movies.popularMovies\r\n});\r\n\r\nexport default connect(mapStateToProps)(MoviesContainer);\r\n","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport styled from 'styled-components'\r\nimport Movie from './Movie'\r\n\r\nconst Grid = styled.div`\r\n    display: grid;\r\n    grid-template-columns: repeat(5, 1fr);\r\n    grid-gap: 40px;\r\n`\r\n\r\nconst SearchMovies = ( { searchMovies } ) => {\r\n\r\n    const movieList = searchMovies && searchMovies.map((movie, index) => {\r\n        return (\r\n            <Movie \r\n                key={index}\r\n                id={movie.id} \r\n                title={movie.title} \r\n                poster={movie.poster}\r\n                year={movie.year}\r\n            />\r\n        )\r\n    });\r\n\r\n    return (\r\n        <Grid>\r\n            { movieList }\r\n        </Grid>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    searchMovies: state.movies.searchMovies\r\n});\r\n\r\nexport default connect(mapStateToProps)(SearchMovies);\r\n","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport PopularMovies from './PopularMovies'\r\nimport SearchMovies from './SearchMovies'\r\nimport styled from 'styled-components'\r\n\r\nconst MovieContainerStyled = styled.section`\r\n    padding: 140px 0 50px 0;\r\n    & h2 {\r\n        margin: 0 0 40px 0;\r\n        font-size: 36px;\r\n    }\r\n`\r\n\r\nconst MoviesContainer = ( { searchMovies, query } ) => {\r\n\r\n    var label = '';\r\n    if(query && searchMovies) {\r\n        label = `Search results for: ${query}`\r\n    } else {\r\n        label = 'Most populars movies'\r\n    }\r\n\r\n    return (\r\n        <MovieContainerStyled>\r\n            <div className=\"container\">\r\n                <h2>{label}</h2>\r\n                {query && searchMovies ? <SearchMovies></SearchMovies> : <PopularMovies></PopularMovies>}\r\n            </div>\r\n        </MovieContainerStyled>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    query: state.movies.query,\r\n    searchMovies: state.movies.searchMovies\r\n});\r\n\r\nexport default connect(mapStateToProps)(MoviesContainer);\r\n","import React, {useEffect} from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { useDispatch } from \"react-redux\";\r\nimport {\r\n  fetchMovie,\r\n} from '../actions/moviesActions';\r\nimport { Link } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\n\r\nconst Background = styled.section`\r\n    padding: 40px 0 90px 0;\r\n    position: relative;\r\n    overflow: hidden;\r\n    margin-top: 90px;\r\n    min-height: calc(100vh - 180px);\r\n    display: flex;\r\n    align-items: center;\r\n    & .go-back {\r\n        color: #fff;\r\n        display: inline-block;\r\n        padding: 10px 0;\r\n        text-decoration: none;\r\n        margin-bottom: 30px;\r\n        & > i {\r\n            margin-right: 10px;\r\n        }\r\n    }\r\n    &:before {\r\n        display: block;\r\n        content: '';\r\n        background-repeat: no-repeat;\r\n        background-position: center;\r\n        background-size: cover;\r\n        background-image: url(${props => props.image || \"\"});\r\n        position: absolute;\r\n        left: 0; right: 0; bottom: -10px; top: 0;\r\n        z-index: -1;\r\n        opacity: 0.2;\r\n        filter: blur(10px) grayscale(80%);\r\n    }\r\n`\r\nconst MovieDetailsContent = styled.div`\r\n    display: grid;\r\n    grid-template-columns: 5fr 7fr;\r\n    grid-gap: 50px;\r\n    max-width: 980px;\r\n    align-items: center;\r\n    margin: 0 auto;\r\n    & > img {\r\n        max-width: 100%;\r\n        border-radius: 10px;\r\n        box-shadow: 0 10px 30px rgba(0,0,0,.2);\r\n        max-height: 600px;\r\n    }\r\n    & h2 {\r\n        font-size: 40px;\r\n        margin-top: 0;\r\n    }\r\n    & p {\r\n        font-size: 18px;\r\n        line-height: 150%;\r\n        margin-bottom: 40px;\r\n    }\r\n`\r\nconst GenresList = styled.ul`\r\n    list-style: none;\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n    align-items: center;\r\n    padding: 0;\r\n    margin: -7px;\r\n    & > li {\r\n        display: inline-flex;\r\n        align-items: center;\r\n        padding: 0 25px;\r\n        font-weight: 700;\r\n        text-transform: uppercase;\r\n        font-size: 11px;\r\n        height: 30px;\r\n        border-radius: 30px;\r\n        color: #151F2E;\r\n        background-color: #fff;\r\n        margin: 7px;\r\n    }\r\n`\r\n\r\nconst MovieDetails = ( { movie, match } ) => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        let params = match.params;\r\n        dispatch(fetchMovie(params.id));\r\n    }, [dispatch]);\r\n\r\n    const genresList = movie.genres && movie.genres.map((genre, index) => {\r\n        return (\r\n            <li key={index}>{ genre.name }</li>\r\n        )\r\n    });\r\n\r\n    return (\r\n        <Background image={`https://image.tmdb.org/t/p/w300${movie.backdrop_path}`}>\r\n            <div className=\"container\">\r\n\r\n                <Link className=\"go-back\" to=\"/movies-react-app\"><i className=\"fas fa-chevron-left\"></i><strong>Go back</strong></Link>\r\n\r\n                <MovieDetailsContent>\r\n                    { movie.poster_path ? <img src={`https://image.tmdb.org/t/p/original/${movie.poster_path}`} alt={movie.title} /> : '' }\r\n                    <div>\r\n                        <h2>{ movie.title }</h2>\r\n                        <p>{ movie.overview }</p>\r\n                        <GenresList>{genresList}</GenresList>\r\n                    </div>\r\n                </MovieDetailsContent>\r\n\r\n            </div>\r\n        </Background>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    movie: state.movies.movie\r\n});\r\n\r\nexport default connect(mapStateToProps)(MovieDetails);\r\n","export default __webpack_public_path__ + \"static/media/logo.103b5fa1.svg\";","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport {\r\n  searchMovies,\r\n  fetchSearchMovies\r\n} from '../actions/moviesActions'\r\nimport styled from 'styled-components'\r\n\r\nconst SearchBarStyled = styled.div`\r\n    max-width: 400px;\r\n    width: 100%;\r\n    position: relative;\r\n    display: flex;\r\n    align-items: center;\r\n    & > i {\r\n        position: absolute;\r\n        right: 20px;\r\n        pointer-events: none;\r\n    }\r\n    & > input {\r\n        color: #fff;\r\n        padding: 0 60px 0 20px;\r\n        height: 50px;\r\n        background-color: #2B3442;\r\n        border-radius: 50px;\r\n        border: 1px solid #2B3442;\r\n        width: 100%;\r\n\t\toutline: none;\r\n\t\tfont-family: 'Noto Sans', sans-serif;\r\n\t\tfont-size: 16px;\r\n\t\t&:focus {\r\n\t\t\tborder-color: #61DBFB;\r\n\t\t}\r\n    }\r\n`\r\n\r\nconst SearchBar = ({ query, searchMovies, fetchSearchMovies  }) => {\r\n\r\n    const onChangeText = (value) => {\r\n\t\tsearchMovies(value)\r\n\t\tif(value) {\r\n\t\t\tfetchSearchMovies(value)\r\n\t\t}\r\n    }\r\n\r\n    return (\r\n        <SearchBarStyled>\r\n            <input \r\n                type=\"text\" \r\n                value={query} \r\n                onChange={(e)=> onChangeText(e.target.value)}\r\n                placeholder=\"Search movies...\"\r\n            />\r\n            <i className=\"fas fa-search\"></i>\r\n        </SearchBarStyled>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  query: state.movies.query,\r\n  popularMovies: state.movies.popularMovies\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    searchMovies: (query) => dispatch(searchMovies(query)),\r\n    fetchSearchMovies: (query) => dispatch(fetchSearchMovies(query)),\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SearchBar);","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\nimport logo from '../logo.svg';\r\nimport SearchBar from './SearchBar';\r\n\r\nconst Header = styled.header`\r\n    height: 90px;\r\n    background-color: #151F2E;\r\n    position: fixed;\r\n    top: 0;\r\n    width: 100%;\r\n    z-index: 900;\r\n    box-shadow: 0 10px 30px rgba(0,0,0,.2);\r\n    & .container {\r\n        display: flex;\r\n        align-items: center;\r\n        justify-content: space-between;\r\n        height: 100%;\r\n    }\r\n`\r\nconst Logo = styled(NavLink)`\r\n    display: flex;\r\n    align-items: center;\r\n    color: #fff;\r\n    text-decoration: none;\r\n    position: relative;\r\n    padding-left: 55px;\r\n    &:hover {\r\n        & > img {\r\n            animation: App-logo-spin infinite 5s linear;\r\n        }\r\n    }\r\n    & > img {\r\n        max-width: 70px;\r\n        position: absolute;\r\n        left: -15px;\r\n    }\r\n    & > strong {\r\n        font-size: 22px;\r\n        text-transform: uppercase;\r\n    }\r\n    @keyframes App-logo-spin {\r\n        from {\r\n            transform: rotate(0deg);\r\n        }\r\n        to {\r\n            transform: rotate(360deg);\r\n        }\r\n    }\r\n`\r\n\r\nconst Navbar = () => {\r\n    return (\r\n        <Header>\r\n            <div className=\"container\">\r\n\r\n                <Logo exact to=\"/movies-react-app\">\r\n                    <img src={logo} alt=\"Movies React App\" />\r\n                    <strong>Movies React App</strong>\r\n                </Logo>\r\n                \r\n                <SearchBar />\r\n\r\n            </div>\r\n        </Header>\r\n    )\r\n}\r\n\r\nexport default Navbar\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\n\r\nconst FooterStyled = styled.section`\r\n    background-color: #151F2E;\r\n    text-align: center;\r\n    height: 90px;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    & > p {\r\n        font-size: 12px;\r\n        margin: 0;\r\n        & > a {\r\n            color: #61DBFB;\r\n            text-decoration: none;\r\n            &:hover {\r\n                text-decoration: underline;\r\n            }\r\n        }\r\n    }\r\n`\r\n\r\nconst Footer = () => {\r\n    return (\r\n        <FooterStyled>\r\n            <p><strong>Movies App</strong> create with <a href=\"https://reactjs.org\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">React.js</a>, <a href=\"https://redux.js.org\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Redux</a> and <a href=\"https://developers.themoviedb.org/3\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">The Movie Database API</a> by <strong>Sebastian Ferrari</strong>.</p>\r\n        </FooterStyled>\r\n    )\r\n}\r\n\r\nexport default Footer\r\n","import React from 'react'\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom'\nimport MoviesContainer from './MoviesContainer'\nimport MovieDetails from './MovieDetails'\nimport Navbar from './Navbar'\nimport Footer from './Footer'\n\nfunction App() {\n    return (\n\t\t<Router>\n\t\t\t<Navbar />\n\t\t\t<main className=\"App\">\n\t\t\t\t<Switch>\n\t\t\t\t\t<Route path=\"/movies-react-app\" exact component={MoviesContainer} /> \n\t\t\t\t\t<Route path=\"/movies-react-app/movie/:id\" component={MovieDetails} />\n\t\t\t\t</Switch>\n\t\t\t</main>\n\t\t\t<Footer />\n\t\t</Router>\n    );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {\r\n    SEARCH_MOVIES,\r\n    FETCH_SEARCH_MOVIES,\r\n    FETCH_POPULAR_MOVIES,\r\n    FETCH_MOVIE,\r\n    LOADING\r\n} from '../actions/types';\r\n  \r\nconst initialState = {\r\n    query: '',\r\n    searchMovies: [],\r\n    popularMovies: [],\r\n    loading: false,\r\n    movie: []\r\n}\r\n\r\nconst movies = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SEARCH_MOVIES:\r\n            return {\r\n                ...state,\r\n                query: action.payload,\r\n                loading: false\r\n            };\r\n        case FETCH_SEARCH_MOVIES:\r\n            return {\r\n                ...state,\r\n                searchMovies: action.payload,\r\n                loading: false\r\n            };\r\n        case FETCH_POPULAR_MOVIES:\r\n            return {\r\n                ...state,\r\n                popularMovies: action.payload,\r\n                loading: false\r\n            };\r\n        case FETCH_MOVIE:\r\n            return {\r\n                ...state,\r\n                movie: action.payload,\r\n                loading: false\r\n            };\r\n        case LOADING:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default movies","import { combineReducers } from 'redux'\r\nimport moviesReducer from './moviesReducer'\r\n\r\nexport default combineReducers({\r\n  movies: moviesReducer,\r\n})","import { createStore, applyMiddleware } from 'redux'\r\nimport thunk from 'redux-thunk'\r\nimport { composeWithDevTools } from 'redux-devtools-extension/developmentOnly'\r\nimport rootReducer from './reducers'\r\n\r\nconst middleware = [thunk];\r\nconst initialState = {};\r\n\r\nconst store = createStore(\r\n    rootReducer,\r\n    initialState,\r\n    composeWithDevTools(applyMiddleware(...middleware))\r\n);\r\n\r\nexport default store;","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { Provider } from 'react-redux'\nimport './index.css'\nimport App from './components/App'\nimport reportWebVitals from './reportWebVitals'\nimport store from './store'\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}